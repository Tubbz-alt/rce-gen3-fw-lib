## ==============================================================
## File generated by AutoESL - High-Level Synthesis System (C, C++, SystemC)
## Version: 2012.1
## Copyright (C) 2012 Xilinx Inc. All rights reserved.
## 
## ==============================================================


BEGIN sobel_filter_top

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VERILOG
OPTION ARCH_SUPPORT_MAP = (zynq=DEVELOPMENT)
OPTION IP_GROUP = MICROBLAZE:PPC:USER
OPTION DESC = sobel_filter_top

# OPTION STYLE = MIX
# OPTION RUN_NGCBUILD = TRUE

PARAMETER RESET_ACTIVE_LOW = 1, DT = integer, RANGE = (0, 1)
PORT SYS_CLK = "", DIR = I, SIGIS = Clk, ASSIGNMENT = REQUIRE
PORT SYS_RESET = "", DIR = I, SIGIS = Rst, ASSIGNMENT = REQUIRE


#####################AXI4-Stream Slave #################
BUS_INTERFACE BUS = INPUT_STREAM, BUS_STD = AXIS, BUS_TYPE = TARGET
## Generics for VHDL or Parameters for Verilog
PARAMETER C_INPUT_STREAM_PROTOCOL = GENERIC, DT = STRING, TYPE = NON_HDL, BUS = INPUT_STREAM
## Ports
PORT INPUT_STREAM_TVALID = TVALID, DIR = I, BUS = INPUT_STREAM
PORT INPUT_STREAM_TREADY = TREADY, DIR = O, BUS = INPUT_STREAM
PORT INPUT_STREAM_TDATA = TDATA, DIR = I, VEC = [23:0], BUS = INPUT_STREAM
PORT INPUT_STREAM_TSTRB = TSTRB, DIR = I, VEC = [2:0], BUS = INPUT_STREAM
PORT INPUT_STREAM_TUSER = TUSER, DIR = I, VEC = [0:0], BUS = INPUT_STREAM
PORT INPUT_STREAM_TLAST = TLAST, DIR = I, VEC = [0:0], BUS = INPUT_STREAM
PORT INPUT_STREAM_TDEST = TDEST, DIR = I, VEC = [0:0], BUS = INPUT_STREAM
########################################################



#####################AXI4-Stream Master ################
BUS_INTERFACE BUS = OUTPUT_STREAM, BUS_STD = AXIS, BUS_TYPE = INITIATOR
## Generics for VHDL or Parameters for Verilog
PARAMETER C_OUTPUT_STREAM_PROTOCOL = GENERIC, DT = STRING, TYPE = NON_HDL, BUS = OUTPUT_STREAM
## Ports
PORT OUTPUT_STREAM_TVALID = TVALID, DIR = O, BUS = OUTPUT_STREAM
PORT OUTPUT_STREAM_TREADY = TREADY, DIR = I, BUS = OUTPUT_STREAM
PORT OUTPUT_STREAM_TDATA = TDATA, DIR = O, VEC = [23:0], BUS = OUTPUT_STREAM
PORT OUTPUT_STREAM_TSTRB = TSTRB, DIR = O, VEC = [2:0], BUS = OUTPUT_STREAM
PORT OUTPUT_STREAM_TUSER = TUSER, DIR = O, VEC = [0:0], BUS = OUTPUT_STREAM
PORT OUTPUT_STREAM_TLAST = TLAST, DIR = O, VEC = [0:0], BUS = OUTPUT_STREAM
PORT OUTPUT_STREAM_TDEST = TDEST, DIR = O, VEC = [0:0], BUS = OUTPUT_STREAM
########################################################



#####################AXI4 Slave#########################
## Bus Interfaces
BUS_INTERFACE BUS = S_AXI_SOBEL_CONTROL, BUS_STD = AXI, BUS_TYPE = SLAVE
## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_SOBEL_CONTROL_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), ADDR_TYPE = REGISTER, ASSIGNMENT = REQUIRE, PAIR = C_S_AXI_SOBEL_CONTROL_HIGHADDR, ADDRESS = BASE, MIN_SIZE = 0x1000, BUS = S_AXI_SOBEL_CONTROL
PARAMETER C_S_AXI_SOBEL_CONTROL_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), ADDR_TYPE = REGISTER, ASSIGNMENT = REQUIRE, PAIR = C_S_AXI_SOBEL_CONTROL_BASEADDR, ADDRESS = HIGH, BUS = S_AXI_SOBEL_CONTROL
PARAMETER C_S_AXI_SOBEL_CONTROL_ADDR_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI_SOBEL_CONTROL
PARAMETER C_S_AXI_SOBEL_CONTROL_DATA_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI_SOBEL_CONTROL
PARAMETER C_S_AXI_SOBEL_CONTROL_PROTOCOL = AXI4LITE, DT = STRING, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = S_AXI_SOBEL_CONTROL
## Ports
PORT s_axi_SOBEL_CONTROL_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI_SOBEL_CONTROL, ASSIGNMENT = REQUIRE
PORT s_axi_SOBEL_CONTROL_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_SOBEL_CONTROL_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_AWVALID = AWVALID, DIR = I, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_AWREADY = AWREADY, DIR = O, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_SOBEL_CONTROL_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_SOBEL_CONTROL_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_WVALID = WVALID, DIR = I, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_WREADY = WREADY, DIR = O, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_BVALID = BVALID, DIR = O, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_BREADY = BREADY, DIR = I, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_SOBEL_CONTROL_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_ARVALID = ARVALID, DIR = I, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_ARREADY = ARREADY, DIR = O, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_SOBEL_CONTROL_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_RVALID = RVALID, DIR = O, BUS = S_AXI_SOBEL_CONTROL
PORT s_axi_SOBEL_CONTROL_RREADY = RREADY, DIR = I, BUS = S_AXI_SOBEL_CONTROL
########################################################



#####################AXI4 Slave#########################
## Bus Interfaces
BUS_INTERFACE BUS = S_AXI_CONTROL_BUS, BUS_STD = AXI, BUS_TYPE = SLAVE
## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_CONTROL_BUS_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), ADDR_TYPE = REGISTER, ASSIGNMENT = REQUIRE, PAIR = C_S_AXI_CONTROL_BUS_HIGHADDR, ADDRESS = BASE, MIN_SIZE = 0x1000, BUS = S_AXI_CONTROL_BUS
PARAMETER C_S_AXI_CONTROL_BUS_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), ADDR_TYPE = REGISTER, ASSIGNMENT = REQUIRE, PAIR = C_S_AXI_CONTROL_BUS_BASEADDR, ADDRESS = HIGH, BUS = S_AXI_CONTROL_BUS
PARAMETER C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI_CONTROL_BUS
PARAMETER C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI_CONTROL_BUS
PARAMETER C_S_AXI_CONTROL_BUS_PROTOCOL = AXI4LITE, DT = STRING, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = S_AXI_CONTROL_BUS
## Ports
PORT s_axi_CONTROL_BUS_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI_CONTROL_BUS, ASSIGNMENT = REQUIRE
PORT s_axi_CONTROL_BUS_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_AWVALID = AWVALID, DIR = I, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_AWREADY = AWREADY, DIR = O, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_CONTROL_BUS_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_CONTROL_BUS_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_WVALID = WVALID, DIR = I, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_WREADY = WREADY, DIR = O, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_BVALID = BVALID, DIR = O, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_BREADY = BREADY, DIR = I, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_ARVALID = ARVALID, DIR = I, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_ARREADY = ARREADY, DIR = O, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_CONTROL_BUS_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_RVALID = RVALID, DIR = O, BUS = S_AXI_CONTROL_BUS
PORT s_axi_CONTROL_BUS_RREADY = RREADY, DIR = I, BUS = S_AXI_CONTROL_BUS
########################################################


END
