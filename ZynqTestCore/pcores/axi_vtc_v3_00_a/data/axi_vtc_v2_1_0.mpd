###################################################################
##
## Name     : axi_vtc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN axi_vtc

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION PAY_CORE = v_tc@2010.09
#OPTION ARCH_SUPPORT_MAP = (OTHERS=DEVELOPMENT)
OPTION ARCH_SUPPORT_MAP = (zynq=PREFERRED, spartan6=PREFERRED, virtex6lx= PREFERRED, virtex6sx= PREFERRED, virtex6cx= PREFERRED, kintex7=PRE_PRODUCTION, virtex7=PRE_PRODUCTION, artix7=PRE_PRODUCTION, zynq=PRE_PRODUCTION, virtex7l=PRE_PRODUCTION, kintex7l=PRE_PRODUCTION)
OPTION USAGE_LEVEL = BASE_USER
OPTION IP_GROUP = MICROBLAZE:PPC:USER
OPTION DESC = Video Timing Controller
OPTION LONG_DESC = The Xilinx Video Timing Controller LogiCORE(TM) is a general purpose video timing generator and detector.  Automatic detection of horizontal and vertical front and back porches, sync pulses and active video pixels is provided along with sync  and blank pulse polarity detection.  Horizontal and vertical blanking and sync pulses are generated including support for programmable pulse polarity. The core is programmable through a comprehensive register set allowing control of various timing generation parameters including horizontal and vertical front and back porch start, active video start, sync start and more. A comprehensive set of interrupt status bits is provided for processor monitoring.  

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI,                                     BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = XSVI_IN,             BUS_TYPE = TARGET,    BUS_STD = XSVI
BUS_INTERFACE BUS = XSVI_OUT,            BUS_TYPE = INITIATOR, BUS_STD = XSVI,      ISVALID = (C_GENERATE_EN == 1)


PARAMETER C_DET_AUTO_SWITCH = 1,         DT = integer, RANGE = (0,1), ISVALID = ((C_GENERATE_EN == 1) && (C_DETECT_EN == 1))

PARAMETER C_MAX_PIXELS          = 4096,         DT = integer, RANGE = (128,256,512,1024,2048,4096,8192)
PARAMETER C_MAX_LINES           = 4096,         DT = integer, RANGE = (128,256,512,1024,2048,4096,8192)
PARAMETER C_NUM_FSYNCS          = 1,            DT = integer, RANGE = (1:16), ISVALID = (C_GENERATE_EN == 1)
PARAMETER C_DETECT_EN           = 0,            DT = integer, RANGE = (0,1)
PARAMETER C_GENERATE_EN         = 1,            DT = integer, RANGE = (0,1)
#PARAMETER C_INTERLACE_EN        = 0,            DT = integer, RANGE = (0,1)

PARAMETER C_DET_HSYNC_EN      = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_DETECT_EN == 1)
PARAMETER C_DET_VSYNC_EN      = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_DETECT_EN == 1)
PARAMETER C_DET_HBLANK_EN     = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_DETECT_EN == 1)
PARAMETER C_DET_VBLANK_EN     = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_DETECT_EN == 1)
#PARAMETER C_DET_FIELDID_EN    = 0,            DT = integer, RANGE = (0,1), ISVALID = (C_DETECT_EN == 1)
PARAMETER C_DET_AVIDEO_EN     = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_DETECT_EN == 1)
PARAMETER C_DET_ACHROMA_EN    = 0,            DT = integer, RANGE = (0,1), ISVALID = (C_DETECT_EN == 1)

PARAMETER C_GEN_HSYNC_EN      = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_GENERATE_EN == 1)
PARAMETER C_GEN_VSYNC_EN      = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_GENERATE_EN == 1)
PARAMETER C_GEN_HBLANK_EN     = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_GENERATE_EN == 1)
PARAMETER C_GEN_VBLANK_EN     = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_GENERATE_EN == 1)
#PARAMETER C_GEN_FIELDID_EN    = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_GENERATE_EN == 1)
PARAMETER C_GEN_AVIDEO_EN     = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_GENERATE_EN == 1)
PARAMETER C_GEN_ACHROMA_EN    = 1,            DT = integer, RANGE = (0,1), ISVALID = (C_GENERATE_EN == 1)



## Generics for VHDL or Parameters for Verilog
#############################################################################
# AXI 4 Parameters
#############################################################################
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, BUS = S_AXI, VALUES = (AXI4LITE=AXI4LITE, AXI4=AXI4), TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ID_WIDTH = 4, DT = INTEGER, BUS = S_AXI, BUS = S_AXI, RANGE = (1:16), TYPE = NON_HDL, ASSIGNMENT = CONSTANT
#PARAMETER C_S_AXI_PROTOCOL = AXI4, DT = STRING, BUS = S_AXI, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
#PARAMETER C_S_AXI_PROTOCOL = AXI4, BUS = S_AXI, VALUES = (AXI4LITE=AXI4LITE, AXI4=AXI4), TYPE = NON_HDL
#PARAMETER C_S_AXI_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), PAIR = C_S_AXI_HIGHADDR, ADDRESS = BASE, BUS = S_AXI, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, MIN_SIZE = 0xFFF, ASSIGNMENT = REQUIRE
#PARAMETER C_S_AXI_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), PAIR = C_S_AXI_BASEADDR, ADDRESS = HIGH, BUS = S_AXI, CACHEABLE = TRUE, ASSIGNMENT = REQUIRE
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, ADDRESS = BASE, PAIR = C_HIGHADDR, BUS = S_AXI, MIN_SIZE = 0x00400, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, ADDRESS = HIGH, PAIR = C_BASEADDR, BUS = S_AXI, ASSIGNMENT = REQUIRE
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI
#PARAMETER C_S_AXI_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = S_AXI, IO_IS = clk_freq, CLK_PORT = S_AXI_ACLK, CLK_UNIT = HZ
PARAMETER C_S_AXI_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = S_AXI, IO_IS = clk_freq, CLK_PORT = video_clk_in, CLK_UNIT = HZ
## ethernetlite has acceptance = 1
#PARAMETER C_S_AXI_WRITE_ACCEPTANCE = 2, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = S_AXI
#PARAMETER C_S_AXI_READ_ACCEPTANCE = 2, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = NON_HDL, BUS = S_AXI
## from ethernetlite
#PARAMETER C_S_AXI_SUPPORTS_NARROW_BURST = 0, DT = INTEGER, TYPE = NON_HDL, BUS = S_AXI, ASSIGNMENT = CONSTANT
#############################################################################
##PARAMETER C_FAMILY = virtex7, DT = STRING

## Ports
#############################################################################
# AXI Ports
#############################################################################
#PORT S_AXI_ACLK         = "",           DIR = I, SIGIS = CLK, BUS = S_AXI:XSVI_IN, ASSIGNMENT = REQUIRE
PORT S_AXI_ARESETN      = ARESETN,      DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR       = AWADDR,       DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID      = AWVALID,      DIR = I, BUS = S_AXI
PORT S_AXI_AWREADY      = AWREADY,      DIR = O, BUS = S_AXI
PORT S_AXI_WDATA        = WDATA,        DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB        = WSTRB,        DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID       = WVALID,       DIR = I, BUS = S_AXI
PORT S_AXI_WREADY       = WREADY,       DIR = O, BUS = S_AXI
PORT S_AXI_BRESP        = BRESP,        DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID       = BVALID,       DIR = O, BUS = S_AXI
PORT S_AXI_BREADY       = BREADY,       DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR       = ARADDR,       DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID      = ARVALID,      DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY      = ARREADY,      DIR = O, BUS = S_AXI
PORT S_AXI_RDATA        = RDATA,        DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP        = RRESP,        DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID       = RVALID,       DIR = O, BUS = S_AXI
PORT S_AXI_RREADY       = RREADY,       DIR = I, BUS = S_AXI
#############################################################################
# End AXI Ports
#############################################################################
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH

###############################################################################
# XSVI input For Detection
###############################################################################
PORT video_clk_in       = video_clk,    DIR = I,            SIGIS = CLK, BUS = XSVI_IN:S_AXI, ASSIGNMENT = REQUIRE
PORT vblank_in          = vblank,       DIR = I,            BUS = XSVI_IN, ISVALID = ((C_DETECT_EN == 1) && (C_DET_VBLANK_EN == 1))
PORT vsync_in           = vsync,        DIR = I,            BUS = XSVI_IN, ISVALID = ((C_DETECT_EN == 1) && (C_DET_VSYNC_EN == 1))
PORT hblank_in          = hblank,       DIR = I,            BUS = XSVI_IN, ISVALID = ((C_DETECT_EN == 1) && (C_DET_HBLANK_EN == 1))
PORT hsync_in           = hsync,        DIR = I,            BUS = XSVI_IN, ISVALID = ((C_DETECT_EN == 1) && (C_DET_HSYNC_EN == 1))
#PORT field_id_in        = field_id,     DIR = I,            BUS = XSVI_IN, ISVALID = ((C_DETECT_EN == 1) && (C_DET_FIELDID_EN == 1))
PORT active_video_in    = active_video, DIR = I,            BUS = XSVI_IN, ISVALID = ((C_DETECT_EN == 1) && (C_DET_AVIDEO_EN == 1))
PORT active_chroma_in   = active_chroma,DIR = I,            BUS = XSVI_IN, ISVALID = ((C_DETECT_EN == 1) && (C_DET_ACHROMA_EN == 1))

###############################################################################
# XSVI output For Generation 
###############################################################################
PORT video_clk_out              = video_clk,    DIR = O,            BUS = XSVI_OUT, ISVALID = (C_GENERATE_EN == 1)
PORT vblank_out          = vblank,       DIR = O,            BUS = XSVI_OUT, ISVALID = ((C_GENERATE_EN == 1) && (C_GEN_VBLANK_EN == 1))
PORT vsync_out           = vsync,        DIR = O,            BUS = XSVI_OUT, ISVALID = ((C_GENERATE_EN == 1) && (C_GEN_VSYNC_EN == 1))
PORT hblank_out          = hblank,       DIR = O,            BUS = XSVI_OUT, ISVALID = ((C_GENERATE_EN == 1) && (C_GEN_HBLANK_EN == 1))
PORT hsync_out           = hsync,        DIR = O,            BUS = XSVI_OUT, ISVALID = ((C_GENERATE_EN == 1) && (C_GEN_HSYNC_EN == 1))
#PORT field_id_out        = field_id,     DIR = O,            BUS = XSVI_OUT, ISVALID = ((C_GENERATE_EN == 1) && (C_DET_FIELDID_EN == 1))
PORT active_video_out    = active_video, DIR = O,            BUS = XSVI_OUT, ISVALID = ((C_GENERATE_EN == 1) && (C_GEN_AVIDEO_EN == 1))
PORT active_chroma_out   = active_chroma,DIR = O,            BUS = XSVI_OUT, ISVALID = ((C_GENERATE_EN == 1) && (C_GEN_ACHROMA_EN == 1))

###############################################################################
# Frame Syncs
###############################################################################
PORT fsync    = "",        DIR = O, VEC = [C_NUM_FSYNCS-1:0],            ISVALID = (C_GENERATE_EN == 1)


###############################################################################
###############################################################################

PORT ce = net_vcc,      DIR = I

END
