###################################################################
##
## Name     : ppc440mc_ddr3_chipscope
## Desc     : Microprocessor Peripheral Description
##
###################################################################

BEGIN ppc440mc_ddr3_chipscope

## Peripheral Options
OPTION HDL = MIXED
OPTION RUN_NGCBUILD = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
# OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION USAGE_LEVEL = BASE_USER
#OPTION ARCH_SUPPORT_MAP = (virtex5fx=PRODUCTION)
OPTION ARCH_SUPPORT_MAP = (virtex5fx=DEVELOPMENT)
OPTION STYLE = HDL
OPTION LAST_UPDATED = 13.2
OPTION DESC = PowerPC 440 DDR3 Memory Controller with chipscope
OPTION LONG_DESC = A wrapper to instantiate the PowerPC 440 DDR3 Memory Controller
OPTION IP_GROUP = Memory and Memory Controller:PPC

IO_INTERFACE IO_IF = memory_0, IO_TYPE = XIL_MEMORY_V1

## Bus Interfaces
BUS_INTERFACE BUS = PPC440MC, BUS_STD = XIL_PPC440MC, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER BANK_WIDTH = 2, DT = integer, RANGE = (2,3), IO_IF = memory_0, IO_IS = C_MEM_BANKADDR_WIDTH
PARAMETER CLK_WIDTH = 1, DT = integer, RANGE = (1:5), IO_IF = memory_0, IO_IS = C_MEM_CLK_WIDTH
PARAMETER CKE_WIDTH = 1, DT = integer, IO_IF = memory_0, IO_IS = CKE_WIDTH
PARAMETER CS_NUM = 2, DT = integer, IO_IF = memory_0, IO_IS = CS_NUM
PARAMETER CS_BITS = 0, DT = integer, IO_IF = memory_0, IO_IS = CS_BITS
PARAMETER CS_WIDTH = 1, DT = integer, IO_IF = memory_0, IO_IS = CS_WIDTH
PARAMETER COL_WIDTH = 10, DT = integer, IO_IF = memory_0, IO_IS = C_DDR_COL_AWIDTH
PARAMETER ROW_WIDTH = 14, DT = integer, IO_IF = memory_0, IO_IS = C_MEM_ADDR_WIDTH
PARAMETER DM_WIDTH = 8, DT = integer, RANGE = (2,4,8,9), IO_IF = memory_0, IO_IS = DM_WIDTH
PARAMETER DQ_BITS = 6, DT = integer, IO_IF = memory_0, IO_IS = DQ_BITS
PARAMETER DQ_WIDTH = 64, DT = integer, RANGE = (16,32,64,72), IO_IF = memory_0, IO_IS = DQ_WIDTH
PARAMETER DQS_BITS = 3, DT = integer, IO_IF = memory_0, IO_IS = DQS_BITS
PARAMETER DQS_WIDTH = 8, DT = integer, RANGE = (2,4,8,9), IO_IF = memory_0, IO_IS = DQS_WIDTH
PARAMETER DQ_PER_DQS = 8, DT = integer, RANGE = (2,4,8), IO_IF = memory_0, IO_IS = DQ_PER_DQS
PARAMETER ADDITIVE_LAT = 0, DT = integer, RANGE = (0:4), IO_IF = memory_0, IO_IS = ADDITIVE_LAT
PARAMETER CAS_LAT = 5, DT = integer, RANGE = (3:5), IO_IF = memory_0, IO_IS = CAS_LAT
PARAMETER ODT_TYPE = 1, DT = integer, RANGE = (0:3), IO_IF = memory_0, IO_IS = C_MEM_ODT_TYPE
PARAMETER ODT_WIDTH = 2, DT = integer, RANGE = (0:4), IO_IF = memory_0, IO_IS = ODT_WIDTH
PARAMETER TREFI_NS = 7800, DT = integer, IO_IF = memory_0, IO_IS = TREFI_NS
PARAMETER TRAS = 40000, DT = integer, IO_IF = memory_0, IO_IS = TRAS
PARAMETER TRCD = 15000, DT = integer, IO_IF = memory_0, IO_IS = TRCD
PARAMETER TRFC = 70000, DT = integer, IO_IF = memory_0, IO_IS = TRFC
PARAMETER TRP = 15000, DT = integer, IO_IF = memory_0, IO_IS = TRP
PARAMETER TRTP = 7500, DT = integer, IO_IF = memory_0, IO_IS = TRTP
PARAMETER TWR = 15000, DT = integer, IO_IF = memory_0, IO_IS = TWR
PARAMETER TWTR  = 10000, DT = integer, IO_IF = memory_0, IO_IS = TWTR 
PARAMETER REDUCE_DRV = 0, DT = integer, RANGE = (0:1), IO_IF = memory_0, IO_IS = REDUCE_DRV
PARAMETER IODELAY_GRP  = IODELAY_MIG, DT = STRING, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = IODELAY_GRP 
PARAMETER CLK_PERIOD = 3333, DT = integer, RANGE = (3000:8000)
PARAMETER BURST_LEN = 4, DT = integer, RANGE = (4,8)
PARAMETER BURST_TYPE = 0, DT = integer, RANGE = (0,1)
PARAMETER ECC_ENABLE = 0, DT = integer, RANGE = (0,1)
PARAMETER MULTI_BANK_EN = 1, DT = integer, RANGE = (0:1)
PARAMETER TWO_T_TIME_EN = 1, DT = integer, RANGE = (0:1)
PARAMETER REG_ENABLE = 0, DT = integer, RANGE = (0:1), IO_IF = memory_0, IO_IS = C_REG_DIMM
PARAMETER READ_DATA_PIPELINE = 0, DT = integer, RANGE = (0:1)
PARAMETER APPDATA_WIDTH = 128, DT = integer, RANGE = (16,32,64,128)
PARAMETER HIGH_PERFORMANCE_MODE = TRUE, DT = boolean
PARAMETER MIB_CLK_RATIO = 0, DT = integer, RANGE = (0:2)
PARAMETER C_MEM_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, ADDRESS = BASE, PAIR = C_MEM_HIGHADDR, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = C_BASEADDR, CACHEABLE = TRUE, PERMIT = BASE_USER, DESC = Bank 0 Base Address
PARAMETER C_MEM_HIGHADDR = 0x00000000, DT = std_logic_vector, ADDRESS = HIGH, PAIR = C_MEM_BASEADDR, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = C_HIGHADDR, PERMIT = BASE_USER, DESC = Bank 0 High Address
PARAMETER SIM_ONLY = 0, DT = integer, RANGE = (0:1)
PARAMETER DEBUG_EN = 0, DT = integer, RANGE = (0:1)
# PARAMETER C_NUM_IDELAYCTRL = 1, DT = integer, IO_IF = memory_0, IO_IS = C_NUM_IDELAYCTRL
PARAMETER FPGA_SPEED_GRADE = 1, DT = integer

## Ports
PORT mc_mibclk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcclk90 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcreset = "", DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT mi_mcclkdiv2 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcclk_200 = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT mi_mcaddressvalid = mimcaddressvalid, DIR = I, BUS = PPC440MC
PORT mi_mcaddress = mimcaddress, DIR = I, VEC = [0:35], BUS = PPC440MC
PORT mi_mcbankconflict = mimcbankconflict, DIR = I, BUS = PPC440MC
PORT mi_mcrowconflict = mimcrowconflict, DIR = I, BUS = PPC440MC
PORT mi_mcbyteenable = mimcbyteenable, DIR = I, VEC = [0:15], BUS = PPC440MC
PORT mi_mcwritedata = mimcwritedata, DIR = I, VEC = [0:127], BUS = PPC440MC
PORT mi_mcreadnotwrite = mimcreadnotwrite, DIR = I, BUS = PPC440MC
PORT mi_mcwritedatavalid = mimcwritedatavalid, DIR = I, BUS = PPC440MC
PORT mc_miaddrreadytoaccept = mcmiaddrreadytoaccept, DIR = O, BUS = PPC440MC
PORT mc_mireaddata = mcmireaddata, DIR = O, VEC = [0:127], BUS = PPC440MC
PORT mc_mireaddataerr = mcmireaddataerr, DIR = O, BUS = PPC440MC
PORT mc_mireaddatavalid = mcmireaddatavalid, DIR = O, BUS = PPC440MC
PORT idelay_ctrl_rdy_i = "", DIR = I, PERMIT = BASE_USER, INITIALVAL = VCC, IO_IF = memory_0, IO_IS = idelay_ctrl_rdy_i
PORT idelay_ctrl_rdy = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = idelay_ctrl_rdy
PORT dcm_lock = "", DIR = I
PORT phy_init_done = "", DIR = O
PORT DDR3_DQ = "", DIR = IO, VEC = [(DQ_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_data
PORT DDR3_DQS = "", DIR = IO, VEC = [(DQS_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_data_strobe
PORT DDR3_DQS_N = "", DIR = IO, VEC = [(DQS_WIDTH-1):0], IOB_STATE = BUF, THREE_STATE = FALSE, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_data_strobe_n
PORT DDR3_A = "", DIR = O, VEC = [(ROW_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_ADDRESS
PORT DDR3_BA = "", DIR = O, VEC = [(BANK_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_BankAddr
PORT DDR3_RAS_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_row_addr_select
PORT DDR3_CAS_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_col_addr_select
PORT DDR3_WE_N = "", DIR = O, PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_write_enable
PORT DDR3_CS_N = "", DIR = O, VEC = [(CS_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_chip_select
PORT DDR3_ODT = "", DIR = O, VEC = [(ODT_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_ODT
PORT DDR3_CKE = "", DIR = O, VEC = [(CKE_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_clk_enable
PORT DDR3_DM = "", DIR = O, VEC = [(DM_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_data_mask
PORT DDR3_CK = "", DIR = O, VEC = [(CLK_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_CLK
PORT DDR3_CK_N = "", DIR = O, VEC = [(CLK_WIDTH-1):0], PERMIT = BASE_USER, IO_IF = memory_0, IO_IS = DDR3_CLK_N
PORT DDR3_RESET_N = "", DIR = O

#PORT mc_mibclk = "", DIR = O
#PORT mi_mcclk90 = "", DIR = O
#PORT mi_mcreset = "", DIR = O
#PORT mi_mcclkdiv2 = "", DIR = O
#PORT mi_mcclk_200 = "", DIR = O
PORT mi_mcaddressvalid_chipscope = mi_mcaddressvalid_chipscope, DIR = O
PORT mi_mcaddress_chipscope = mi_mcaddress_chipscope, DIR = O, VEC = [0:35]
PORT mi_mcbankconflict_chipscope = mi_mcbankconflict_chipscope, DIR = O
PORT mi_mcrowconflict_chipscope = mi_mcrowconflict_chipscope, DIR = O
PORT mi_mcbyteenable_chipscope = mi_mcbyteenable_chipscope, DIR = O, VEC = [0:15]
PORT mi_mcwritedata_chipscope = mi_mcwritedata_chipscope, DIR = O, VEC = [0:127]
PORT mi_mcreadnotwrite_chipscope = mi_mcreadnotwrite_chipscope, DIR = O
PORT mi_mcwritedatavalid_chipscope = mi_mcwritedatavalid_chipscope, DIR = O
PORT mc_miaddrreadytoaccept_chipscope = mc_miaddrreadytoaccept_chipscope, DIR = O
PORT mc_mireaddata_chipscope = mc_mireaddata_chipscope, DIR = O, VEC = [0:127]
PORT mc_mireaddataerr_chipscope = mc_mireaddataerr_chipscope, DIR = O
PORT mc_mireaddatavalid_chipscope = mc_mireaddatavalid_chipscope, DIR = O

END
